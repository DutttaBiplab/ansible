  9. Generate a host file
    * Download an initial template file from http://server.network.example.com/materials/host.j2 to
    /home/admin/ansible
    * Complete the template so that it can he used to generate a file with a line for each host in the
    same format as /etc/hosts
    * Create a playbook call /home/admin/host.yml that uses this template to generate the file
    /etc/myhosts on hosts in the dev host group.
    When the playbook is run, the file /etc/myhosts on host in the dev host group should have a line for
  each managed hosts:
    127.0.0.1 localhost localhost.localdoamin localhost4 localhost4.localdomain
    ::1 localhost localhost.localdoamin localhost6 localhost6.localdomain
    172.24.10.6 system1.domain1.example.com system1
    172.24.10.7 system2.doamin1.example.com system2
    172.24.10.8 system3.doamin1.example.com system3
    172.24.10.9 system4.doamin1.example.com system4
    172.24.10.10 system5.doamin1.example.com system5
  Note: The order in which the inventory host names appear is not important.
    
    
    [admin@control ~]$  wget http://server.network.example.com/materials/host.j2
    
    [admin@control ~]$   vim host.yml

  - hosts: all
    tasks:
      - name: copy /etc/hosts to /etc/myhosts
        ansible.builtin.template:
          src: /home/admin/ansible/hosts.j2
          dest: /etc/myhosts
        when: inventory_hostname in groups['dev']

      - name: create host file
        ansible.builtin.lineinfile:
          path: /etc/myhosts
          line: '{{ hostvars[item].ansible_eth0.ipv4.address }} {{ hostvars[item].ansible_fqdn }} {{ item }}'
          state: present
        with_items: '{{ groups.all }}'
        when: inventory_hostname in groups['dev']

    :wq!

    [admin@control ~]$ ansible-navigator run hosts.yml -m stdout


